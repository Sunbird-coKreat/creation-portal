version: 2.1
jobs:
  build:
    machine:
      image: circleci/classic:latest
    steps:
      - checkout
      - run:
          name: Installing prerequisites
          command: |-
            curl -sL https://deb.nodesource.com/setup_14.x | sudo -E bash -
            node --version
      - run:
          name: run build file
          command: /bin/bash -x build.sh ${CIRCLE_SHA1} test
  test-cases:
    working_directory: ~/portal/src/app/client
    machine:
      image: ubuntu-2004:202107-02
    steps:
      - checkout:
          path: ~/portal
      - run: 
          name: Installing prerequisites
          command: |-
            sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 6DB5542C356545CF # Adding Heroku keys, else the apt update will fail.
            sudo apt-get update && sudo apt install -y ca-certificates libxpm4 libxrender1 libgtk2.0-0 libnss3 libgconf-2-4 \
                  xvfb gtk2-engines-pixbuf \
                  xfonts-cyrillic xfonts-100dpi xfonts-75dpi xfonts-base xfonts-scalable
            curl -sL https://deb.nodesource.com/setup_14.x | sudo -E bash -
            echo "deb http://dl.google.com/linux/chrome/deb/ stable main" | sudo tee -a /etc/apt/sources.list
            # Fetch Chrome's PGP keys for secure installation
            wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
            # Update aptitude's package sources
            sudo apt-get -qq update -y
            # Install latest Chrome stable, Xvfb packages
            sudo apt-get -qq install -y google-chrome-stable xvfb gtk2-engines-pixbuf xfonts-cyrillic xfonts-100dpi xfonts-75dpi xfonts-base xfonts-scalable imagemagick x11-apps default-jre
            # Launch Xvfb
            Xvfb :0 -ac -screen 0 1024x768x24 &
            # Export display for Chrome
            export DISPLAY=:99
            sudo apt install nodejs -y
            node --version
      - run:
          name: Installing angular cli
          command: 'npm install -g @angular/cli@11.2.19 --no-progress'
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: Installing npm deps
          command: 'npm install --no-progress --legacy-peer-deps'
      - save_cache: # special step to save the dependency cache
          key: dependency-cache-{{ checksum "package.json" }}
          paths: ./node_modules
      - run:
          name: ng lint and building
          command: 'mkdir -p /tmp/logs && node --max_old_space_size=6000 ./node_modules/@angular/cli/bin/ng build --prod --optimization=false --buildOptimizer=false | tee /tmp/logs/build.log'
      - run:
          name: Executing test cases
          command: 'npm run test-coverage | tee /tmp/logs/test_cases.log'
      - run:
          name: Install  Node.js v14.20.1 with build in nvm tool
          command: |
            export NVM_DIR="/opt/circleci/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"
      - run:
          name: Altered Node version
          command: 'node --version'
      - run:
          name: install sonar scanner
          command: npm install -g sonarqube-scanner
      - run:
         name: run sonar scanner
         command: 'cd ~/portal && sonar-scanner'
workflows:
  version: 2
  build_and_test:
    jobs:
      - test-cases
